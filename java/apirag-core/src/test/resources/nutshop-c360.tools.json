[
  {
    "type": "api",
    "function": {
      "name": "ordered_products",
      "description": "Returns products the customer previously purchased decreasing order by most purchased. Use to recommend products for the customer to purchase.",
      "parameters": {
        "type": "object",
        "properties": {
          "customerid": {
            "type": "integer"
          }
        },
        "required": ["customerid"]
      }
    },
    "context": ["customerid"],
    "api": {
      "query": "query OrderAgainProducts($customerid: Int!) {\nOrderAgain(customerid: $customerid) {\n  product {\n    id\n    name\n    category\n    type\n    sizing\n  }\n  num\n  quantity\n}\n}"
    }
  },
  {
    "type": "api",
    "function": {
      "name": "spending_by_week",
      "description": "Returns the total spending and savings for the customer by week, ordered by most recent",
      "parameters": {
        "type": "object",
        "properties": {
          "customerid": {
            "type": "integer"
          },
          "limit": {
            "type": "integer",
            "description": "The number of weeks to return"
          }
        },
        "required": ["customerid"]
      }
    },
    "context": ["customerid"],
    "api": {
      "query": "query SpendingByWeek($customerid: Int!, $limit: Int = 10) {\n\tSpendingByWeek(customerid: $customerid, limit: $limit) {\n  \tweek\n  \ttotal_spend\n  \ttotal_savings\n\t}\n}"
    }
  },
  {
    "type": "api",
    "function": {
      "name": "orders",
      "description": "Returns the orders for the customer ordered by most recent",
      "parameters": {
        "type": "object",
        "properties": {
          "customerid": {
            "type": "integer"
          },
          "limit": {
            "type": "integer",
            "description": "The number of orders to return"
          }
        },
        "required": ["customerid"]
      }
    },
    "context": ["customerid"],
    "api": {
      "query": "query Orders($customerid: Int!, $limit: Int = 10) {\nOrders(customerid: $customerid, limit:$limit) {\n  timestamp\n  total {\n    price\n    discount\n  }\n  items {\n    product {\n      id\n      name\n      category\n    }\n    quantity\n    unit_price\n    discount0\n  }\n}\n}"
    }
  },
  {
    "type": "api",
    "function": {
      "name": "InternalSaveChatMessage",
      "description": "Saves User Chat Messages",
      "parameters": {
        "type": "object",
        "properties": {
        },
        "required": []
      }
    },
    "context": ["customerid"],
    "api": {
      "query": "mutation AddChatMsg($role: String!, $content: String!, $name: String, $customerid: Int!) {\n  AddChatMessage(message: {role: $role, content:$content, name: $name, customerid: $customerid}) {\n    _source_time\n  }\n}"
    }
  },
  {
    "type": "api",
    "function": {
      "name": "InternalGetChatMessages",
      "description": "Retrieves User Chat Messages",
      "parameters": {
        "type": "object",
        "properties": {
        },
        "required": []
      }
    },
    "context": ["customerid"],
    "api": {
      "query": "query GetChatMessages($customerid: Int!, $limit: Int = 10) {\nmessages: CustomerChatMessage(customerid: $customerid, limit:$limit) {\n  role\n  content\n name\n}\n}"
    }
  }
]