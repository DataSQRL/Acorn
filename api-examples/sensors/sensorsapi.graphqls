type Query {
  SecReading(sensorid: Int!, limit: Int = 10, offset: Int = 0): [SecReading!]
  SensorMaxTempLastMinute(sensorid: Int, limit: Int = 10, offset: Int = 0): [SensorMaxTemp!]
  SensorMaxTemp(sensorid: Int, limit: Int = 10, offset: Int = 0): [SensorMaxTemp!]
}

type SecReading {
  sensorid: Int!
  timeSec: String!
  temp: Float!
}

type SensorMaxTemp {
  sensorid: Int!
  maxTemp: Float!
}

type Mutation {
  AddReading(metric: ReadingInput!): CreatedReading
}

input ReadingInput {
  sensorid: Int!
  temperature: Float!
}

type CreatedReading {
  _source_time: String!
  sensorid: Int!
}